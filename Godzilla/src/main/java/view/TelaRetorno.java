/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import factory.ConnectionFactory;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.dao.AlugarCarroDao;
import model.dao.CarrosDao;
import model.entities.Aluguel;
import model.entities.Retorno;

/**
 *
 * @author migue
 */
public class TelaRetorno extends javax.swing.JFrame {

    /**
     * Creates new form TelaRetorno
     */
    private CarrosDao carrosDao;
    private DefaultListModel<String> carrosModel;
    private Connection con;
    private Statement st;
    private ResultSetMetaData metaData;
    private ResultSet rs;

    public TelaRetorno() {
        initComponents();
        exibirCarros();
        exibirAluguel();
        preencherListaClientes(listaClientes);
        preencherInformacoesSelecionadas();

        tabelacarros.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tabelacarros.getSelectedRow();
                    if (selectedRow != -1) {
                        String placa = tabelacarros.getValueAt(selectedRow, 0).toString();
                        tfPlaca.setText(placa);
                    }
                }
            }
        });
        listaClientes.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedIndex = listaClientes.getSelectedIndex();
                    if (selectedIndex != -1) {
                        String selectedValue = listaClientes.getSelectedValue();
                        String[] parts = selectedValue.split(" - ");
                        String id = parts[0];
                        String nome = parts[1];
                        tfIdCliente.setText(id);
                        tfnomecliente.setText(nome);
                    }
                }
            }
        });
        tabelaAluguel.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = tabelaAluguel.getSelectedRow();
                if (selectedRow != -1) {
                    String idAluguel = tabelaAluguel.getValueAt(selectedRow, 0).toString();
                    tfId.setText(idAluguel);
                    String nomeCliente = tabelaAluguel.getValueAt(selectedRow, 1).toString();
                    tfnomecliente.setText(nomeCliente);
                    String dataEsperada = tabelaAluguel.getValueAt(selectedRow, 4).toString();
                    tfdataesperada.setText(dataEsperada);
                }
            }
        }
    });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfdataRetorno = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelacarros = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaClientes = new javax.swing.JList<>();
        tfIdCliente = new javax.swing.JTextField();
        tfPlaca = new javax.swing.JTextField();
        tfId = new javax.swing.JTextField();
        tfvalor = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaAluguel = new javax.swing.JTable();
        retorno = new javax.swing.JButton();
        tfnomecliente = new javax.swing.JTextField();
        tfdataesperada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        tfdataRetorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdataRetornoActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Stencil", 0, 36)); // NOI18N
        jLabel1.setText("Retorno");

        tabelacarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelacarros);

        listaClientes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaClientes);

        tfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIdActionPerformed(evt);
            }
        });

        tfvalor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfvalorActionPerformed(evt);
            }
        });

        tabelaAluguel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelaAluguel);

        retorno.setText("Retorno");
        retorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retornoActionPerformed(evt);
            }
        });

        tfdataesperada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdataesperadaActionPerformed(evt);
            }
        });

        jLabel2.setText("ID CLIENTE");

        jLabel3.setText("PLACA");

        jLabel4.setText("ID ALUGUEL");

        jLabel5.setText("NOME DO CLIENTE");

        jLabel6.setText("DATA ESPERADA PARA RETORNO");

        jLabel7.setText("VALOR DO CARRO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(tfIdCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                                .addComponent(tfPlaca)
                                .addComponent(tfId)
                                .addComponent(tfnomecliente)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(tfdataesperada, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(tfvalor, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retorno))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfnomecliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel6)
                        .addGap(7, 7, 7)
                        .addComponent(tfdataesperada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfvalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(retorno))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfdataRetornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdataRetornoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdataRetornoActionPerformed

    private void tfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIdActionPerformed

    private void retornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retornoActionPerformed
        Retorno rent = new Retorno();
        AlugarCarroDao dao = new AlugarCarroDao();
        String idAluguel = tfId.getText();
        int idaluguel  = Integer.parseInt(idAluguel);// converte para inteiro
        String placa = tfPlaca.getText();
        String idCliente = tfIdCliente.getText();
        int idcliente  = Integer.parseInt(idCliente);// converte para inteiro
        String nomeCliente = tfnomecliente.getText();
        String valor = tfvalor.getText();
        
        double valorCarro = Double.parseDouble(valor);
        LocalDate dataRetornoAtual = LocalDate.now();
        String dataRetornoAtuall = LocalDate.now().toString();
        LocalDate dataRetornoEsperado = LocalDate.parse(tfdataesperada.getText());

        long atraso = ChronoUnit.DAYS.between(dataRetornoEsperado, dataRetornoAtual);

        double multaConta = 0.0;
        if (dataRetornoAtual.isAfter(dataRetornoEsperado)) {

            multaConta = 0.10 * valorCarro;
        }
        
        rent.setId_aluguel(idaluguel);
        rent.setPlaca(placa);
        rent.setNome(nomeCliente);
        rent.setData_retorno(dataRetornoAtual);
        rent.setMultaConta(multaConta);
        rent.setAtraso(atraso);
        
        try {
        if (!ConnectionFactory.getConnectionb()) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco de dados");
        } else {
            if (dao.retornarCarro(rent)) {
            if (multaConta > 0.0) {
                String mensagem = "O cliente possui uma multa no valor de R$" + multaConta;
                JOptionPane.showMessageDialog(null, mensagem);
            } else {
                JOptionPane.showMessageDialog(null, "Dados inseridos com sucesso!");
                dao.gerarNotaRetorno(placa, idCliente, dataRetornoAtuall, nomeCliente);
                
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar os dados do carro");
        }

            dao.atualizarTabela((DefaultTableModel) tabelacarros.getModel());
            tabelacarros.revalidate();
            tabelacarros.repaint();
            tabelaAluguel.revalidate();
            tabelaAluguel.repaint();
            
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erro ao atualizar a tabela de alugueis ");
    } finally {
        ConnectionFactory.closeConnection();
    }
        
    }//GEN-LAST:event_retornoActionPerformed

    private void tfdataesperadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdataesperadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdataesperadaActionPerformed

    private void tfvalorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfvalorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfvalorActionPerformed
    
    private void preencherInformacoesSelecionadas() {
    tabelacarros.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = tabelacarros.getSelectedRow();
                if (selectedRow != -1) {
                    String placa = tabelacarros.getValueAt(selectedRow, 0).toString();
                    tfPlaca.setText(placa);
                    String valor = tabelacarros.getValueAt(selectedRow,4).toString();
                    tfvalor.setText(valor);
                }
            }
        }
    });}
    public void exibirCarros() {
        try {
            con = ConnectionFactory.getConnection();
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM carros WHERE status = 'ALUGADO'");
            tabelacarros.setModel(resultSetToTableModel(rs));
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            ConnectionFactory.closeConnection();
        }
    }

    public void exibirAluguel() {
        try {
            con = ConnectionFactory.getConnection();
            st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM aluguel2");
            tabelaAluguel.setModel(resultSetToTableModel(rs));
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            ConnectionFactory.closeConnection();
        }
    }

    public DefaultTableModel resultSetToTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();

        // Obter os nomes das colunas
        String[] columnNames = new String[columnCount];
        for (int column = 1; column <= columnCount; column++) {
            columnNames[column - 1] = metaData.getColumnName(column);
        }

        // Criar o modelo de tabela vazio
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        // Preencher o modelo de tabela com os dados do ResultSet
        while (rs.next()) {
            Object[] rowData = new Object[columnCount];
            for (int column = 1; column <= columnCount; column++) {
                rowData[column - 1] = rs.getObject(column);
            }
            model.addRow(rowData);
        }

        return model;
    }

    public void preencherListaClientes(JList<String> listaClientes) {
        DefaultListModel<String> model = new DefaultListModel<>();

        // Estabelecer a conexão com o banco de dados usando a ConnectionFactory
        try {
            con = ConnectionFactory.getConnection();
            PreparedStatement statement = con.prepareStatement("SELECT id, nome FROM clientes");
            ResultSet resultSet = statement.executeQuery();

            // Adicionar os clientes na lista
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String nome = resultSet.getString("nome");
                model.addElement(id + " - " + nome);
            }

            // Fechar os recursos
            resultSet.close();
            statement.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Definir o modelo da JList
        listaClientes.setModel(model);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRetorno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRetorno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRetorno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRetorno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRetorno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listaClientes;
    private javax.swing.JButton retorno;
    private javax.swing.JTable tabelaAluguel;
    private javax.swing.JTable tabelacarros;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfIdCliente;
    private javax.swing.JTextField tfPlaca;
    private javax.swing.JTextField tfdataRetorno;
    private javax.swing.JTextField tfdataesperada;
    private javax.swing.JTextField tfnomecliente;
    private javax.swing.JTextField tfvalor;
    // End of variables declaration//GEN-END:variables
}
